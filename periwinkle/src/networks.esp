// #include <ESP8266WiFi.h>
// #include <ESP8266WiFiMulti.h>


#ifndef WIFI_SSID
WIFI_SSID "almost_smart"
#endif

#ifndef WIFI_PASS
WIFI_PASS "1234567890"
#endif

bool ICACHE_FLASH_ATTR wifi_ap_setup(const char *ap_ssid = WIFI_SSID, const char *ap_pass = WIFI_PASS){

  Log("Setting up Access Point");
  bool sts = false;
  WiFi.mode(WIFI_AP);
  if (ap_pass != NULL && ap_pass != ""){
    sts = WiFi.softAP(ap_ssid, ap_pass);
    Log("WiFi AP password " + String(ap_pass),2);
  }
  else{
    sts = WiFi.softAP(ap_ssid);
  }
  if(!sts){
    Log("Failed to setup ssid",0);
  }
  else{
    Log("AP setup success",2);
  }
  return sts;
}

bool ICACHE_FLASH_ATTR wifi_cl_connect(const char *client_ssid = WIFI_SSID, const char *client_pass = WIFI_PASS){
  String msg;
  bool sts = false;
  msg = "Connecting to "+ String(client_ssid);
  Log(msg,3);
  
  WiFi.mode(WIFI_STA);
  if(client_pass != NULL){
    WiFi.begin(client_ssid, client_pass);
  }
  else{
    WiFi.begin(client_ssid);
  }

  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Log("WiFi connection timeout", 2);
    sts =  false;
  }
  else{
    WiFi.setAutoReconnect(true);
    WiFi.persistent(true);
    Log("WiFi connected!");
    Log("", 11);
    sts = true;
  }
  return sts;
}


unsigned long last_wifi_check = 0;
void wifi_loop(){
  if(millis() - last_wifi_check > 5000){
    if(!net_status && wifi_mode){
      Log(String("Reconnecting to ")+wifi_ssid, 2);
      WiFi.disconnect();
      wifi_cl_connect(wifi_ssid,wifi_pass);
    }
  }
}